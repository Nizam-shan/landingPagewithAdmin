{"ast":null,"code":"var _jsxFileName = \"/home/nizam/IBS_project/clients/src/components/modal/modal.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/** @jsx jsx */\nimport { jsx, Box } from \"theme-ui\";\nimport { useEffect } from \"react\";\nimport { GrClose } from \"react-icons/gr\";\nimport ReactModal from \"react-modal\";\n// import './modal.module.css';\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n    zIndex: 100\n  },\n  content: {\n    border: 0,\n    padding: 0,\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    overflow: \"unset\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"70%\"\n  }\n};\nfunction Modal(_ref) {\n  let {\n      isOpen,\n      closeModal,\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"isOpen\", \"closeModal\", \"children\"]);\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    }\n    return () => document.body.style.overflow = \"unset\";\n  });\n  return jsx(ReactModal, _extends({\n    isOpen: isOpen,\n    ariaHideApp: false,\n    style: customStyles\n    // closeTimeoutMS={2000}\n    ,\n    onRequestClose: closeModal\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), children);\n}\nexport default Modal;\nexport const CloseButton = _ref2 => {\n  let {\n      onClick,\n      size,\n      color\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, [\"onClick\", \"size\", \"color\"]);\n  return jsx(\"button\", _extends({\n    sx: styles.button,\n    onClick: onClick\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), jsx(GrClose, {\n    size: size !== null && size !== void 0 ? size : \"24px\",\n    color: color !== null && color !== void 0 ? color : color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n};\nconst styles = {\n  button: {\n    padding: 0,\n    border: 0,\n    backgroundColor: \"transparent\",\n    marginLeft: \"auto\",\n    display: \"inline-flex\",\n    cursor: \"pointer\",\n    position: \"absolute\",\n    right: 0,\n    top: \"-40px\",\n    path: {\n      stroke: \"#fff\"\n    }\n  }\n};","map":{"version":3,"names":["jsx","Box","useEffect","GrClose","ReactModal","customStyles","overlay","backgroundColor","zIndex","content","border","padding","top","left","right","bottom","overflow","marginRight","transform","width","Modal","_ref","isOpen","closeModal","children","props","_objectWithoutProperties","document","body","style","_extends","ariaHideApp","onRequestClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","CloseButton","_ref2","onClick","size","color","sx","styles","button","marginLeft","display","cursor","position","path","stroke"],"sources":["/home/nizam/IBS_project/clients/src/components/modal/modal.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Box } from \"theme-ui\";\nimport { useEffect } from \"react\";\nimport { GrClose } from \"react-icons/gr\";\nimport ReactModal from \"react-modal\";\n// import './modal.module.css';\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: \"rgba(0,0,0,0.75)\",\n    zIndex: 100,\n  },\n  content: {\n    border: 0,\n    padding: 0,\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    overflow: \"unset\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"70%\",\n  },\n};\n\nfunction Modal({ isOpen, closeModal, children, ...props }) {\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = \"hidden\";\n    }\n    return () => (document.body.style.overflow = \"unset\");\n  });\n\n  return (\n    <ReactModal\n      isOpen={isOpen}\n      ariaHideApp={false}\n      style={customStyles}\n      // closeTimeoutMS={2000}\n      onRequestClose={closeModal}\n      {...props}\n    >\n      {children}\n    </ReactModal>\n  );\n}\n\nexport default Modal;\n\nexport const CloseButton = ({ onClick, size, color, ...props }) => {\n  return (\n    <button sx={styles.button} onClick={onClick} {...props}>\n      <GrClose size={size ?? \"24px\"} color={color ?? color} />\n    </button>\n  );\n};\n\nconst styles = {\n  button: {\n    padding: 0,\n    border: 0,\n    backgroundColor: \"transparent\",\n    marginLeft: \"auto\",\n    display: \"inline-flex\",\n    cursor: \"pointer\",\n    position: \"absolute\",\n    right: 0,\n    top: \"-40px\",\n    path: {\n      stroke: \"#fff\",\n    },\n  },\n};\n"],"mappings":";;;;;;AAAA;AACA,SAASA,GAAG,EAAEC,GAAG,QAAQ,UAAU;AACnC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,OAAO,QAAQ,gBAAgB;AACxC,OAAOC,UAAU,MAAM,aAAa;AACpC;;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACPC,eAAe,EAAE,kBAAkB;IACnCC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,CAAC;IACVC,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,OAAO;IACjBC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE,uBAAuB;IAClCC,KAAK,EAAE;EACT;AACF,CAAC;AAED,SAASC,KAAKA,CAAAC,IAAA,EAA6C;EAAA,IAA5C;MAAEC,MAAM;MAAEC,UAAU;MAAEC;IAAmB,CAAC,GAAAH,IAAA;IAAPI,KAAK,GAAAC,wBAAA,CAAAL,IAAA;EACrDnB,SAAS,CAAC,MAAM;IACd,IAAIoB,MAAM,EAAE;MACVK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACb,QAAQ,GAAG,QAAQ;IACzC;IACA,OAAO,MAAOW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACb,QAAQ,GAAG,OAAQ;EACvD,CAAC,CAAC;EAEF,OACEhB,GAAA,CAACI,UAAU,EAAA0B,QAAA;IACTR,MAAM,EAAEA,MAAO;IACfS,WAAW,EAAE,KAAM;IACnBF,KAAK,EAAExB;IACP;IAAA;IACA2B,cAAc,EAAET;EAAW,GACvBE,KAAK;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAERd,QACS,CAAC;AAEjB;AAEA,eAAeJ,KAAK;AAEpB,OAAO,MAAMmB,WAAW,GAAGC,KAAA,IAAwC;EAAA,IAAvC;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAAgB,CAAC,GAAAH,KAAA;IAAPf,KAAK,GAAAC,wBAAA,CAAAc,KAAA;EAC1D,OACExC,GAAA,WAAA8B,QAAA;IAAQc,EAAE,EAAEC,MAAM,CAACC,MAAO;IAACL,OAAO,EAAEA;EAAQ,GAAKhB,KAAK;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IACpDtC,GAAA,CAACG,OAAO;IAACuC,IAAI,EAAEA,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAI,MAAO;IAACC,KAAK,EAAEA,KAAK,aAALA,KAAK,cAALA,KAAK,GAAIA,KAAM;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACjD,CAAC;AAEb,CAAC;AAED,MAAMO,MAAM,GAAG;EACbC,MAAM,EAAE;IACNnC,OAAO,EAAE,CAAC;IACVD,MAAM,EAAE,CAAC;IACTH,eAAe,EAAE,aAAa;IAC9BwC,UAAU,EAAE,MAAM;IAClBC,OAAO,EAAE,aAAa;IACtBC,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE,UAAU;IACpBpC,KAAK,EAAE,CAAC;IACRF,GAAG,EAAE,OAAO;IACZuC,IAAI,EAAE;MACJC,MAAM,EAAE;IACV;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}