{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui';\nconst ResponsiveIframe = _ref => {\n  let {\n      src,\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"src\", \"children\"]);\n  return jsx(Box, {\n    sx: styles.videoContainer\n  }, children ? children : jsx(\"iframe\", _extends({\n    src: src\n  }, props)));\n};\nexport default ResponsiveIframe;\nconst styles = {\n  videoContainer: {\n    overflow: 'hidden',\n    paddingTop: '56.25%',\n    position: 'relative',\n    iframe: {\n      border: 0,\n      height: '100%',\n      left: 0,\n      position: 'absolute',\n      top: 0,\n      width: '100%'\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}