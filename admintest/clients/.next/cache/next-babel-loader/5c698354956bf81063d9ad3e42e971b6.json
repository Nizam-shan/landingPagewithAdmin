{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"isOpen\", \"closeModal\", \"children\"],\n  _excluded2 = [\"onClick\", \"size\", \"color\"];\nimport React from \"react\";\nvar __jsx = React.createElement;\n/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui';\nimport { useEffect } from 'react';\nimport { GrClose } from 'react-icons/gr';\nimport ReactModal from 'react-modal';\n// import './modal.module.css';\n\nvar customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,0,0,0.75)',\n    zIndex: 100\n  },\n  content: {\n    border: 0,\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    overflow: 'unset',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '70%'\n  }\n};\nfunction Modal(_ref) {\n  var isOpen = _ref.isOpen,\n    closeModal = _ref.closeModal,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  useEffect(function () {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    }\n    return function () {\n      return document.body.style.overflow = 'unset';\n    };\n  });\n  return jsx(ReactModal, _extends({\n    isOpen: isOpen,\n    ariaHideApp: false,\n    style: customStyles,\n    closeTimeoutMS: 2000,\n    onRequestClose: closeModal\n  }, props), children);\n}\nexport default Modal;\nexport var CloseButton = function CloseButton(_ref2) {\n  var onClick = _ref2.onClick,\n    size = _ref2.size,\n    color = _ref2.color,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  return jsx(\"button\", _extends({\n    sx: styles.button,\n    onClick: onClick\n  }, props), jsx(GrClose, {\n    size: size !== null && size !== void 0 ? size : '24px',\n    color: color !== null && color !== void 0 ? color : color\n  }));\n};\nvar styles = {\n  button: {\n    padding: 0,\n    border: 0,\n    backgroundColor: 'transparent',\n    marginLeft: 'auto',\n    display: 'inline-flex',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: 0,\n    top: '-40px',\n    path: {\n      stroke: '#fff'\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}