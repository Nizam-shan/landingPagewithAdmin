{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/** @jsx jsx */\nimport { jsx, Box } from 'theme-ui';\nimport { useEffect } from 'react';\nimport { GrClose } from 'react-icons/gr';\nimport ReactModal from 'react-modal';\n// import './modal.module.css';\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0,0,0,0.75)',\n    zIndex: 100\n  },\n  content: {\n    border: 0,\n    padding: 0,\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    overflow: 'unset',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '70%'\n  }\n};\nfunction Modal(_ref) {\n  let {\n      isOpen,\n      closeModal,\n      children\n    } = _ref,\n    props = _objectWithoutProperties(_ref, [\"isOpen\", \"closeModal\", \"children\"]);\n  useEffect(() => {\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    }\n    return () => document.body.style.overflow = 'unset';\n  });\n  return jsx(ReactModal, _extends({\n    isOpen: isOpen,\n    ariaHideApp: false,\n    style: customStyles,\n    closeTimeoutMS: 2000,\n    onRequestClose: closeModal\n  }, props), children);\n}\nexport default Modal;\nexport const CloseButton = _ref2 => {\n  let {\n      onClick,\n      size,\n      color\n    } = _ref2,\n    props = _objectWithoutProperties(_ref2, [\"onClick\", \"size\", \"color\"]);\n  return jsx(\"button\", _extends({\n    sx: styles.button,\n    onClick: onClick\n  }, props), jsx(GrClose, {\n    size: size !== null && size !== void 0 ? size : '24px',\n    color: color !== null && color !== void 0 ? color : color\n  }));\n};\nconst styles = {\n  button: {\n    padding: 0,\n    border: 0,\n    backgroundColor: 'transparent',\n    marginLeft: 'auto',\n    display: 'inline-flex',\n    cursor: 'pointer',\n    position: 'absolute',\n    right: 0,\n    top: '-40px',\n    path: {\n      stroke: '#fff'\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}